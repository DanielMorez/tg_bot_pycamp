from aiogram import Dispatcher, F, Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import (InlineKeyboardButton, KeyboardButton,
                           ReplyKeyboardMarkup)
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src.keyboards import messages
from src.services.auth import user_login

router = Router()


# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM
class AuthState(StatesGroup):
    waiting_for_phone = State()


@router.message(Command('start'))
async def start_command(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text='üîê–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è', callback_data='auth', request_contact=True))

    builder.add(
        InlineKeyboardButton(
            text='üí¨–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π',
            url='https://t.me/your_support_bot',  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        )
    )
    builder.add(
        InlineKeyboardButton(
            text='ü¶ä–ù–∞—à –∫–∞–Ω–∞–ª',
            url='https://t.me/codelis_digest',  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        )
    )
    builder.add(
        InlineKeyboardButton(
            text='‚ÅâÔ∏è–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã',
            callback_data='faq',
        )
    )

    builder.adjust(1, 2, 1)

    await message.answer(messages.START, reply_markup=builder.as_markup())


@router.callback_query(F.data == 'auth')
async def auth_callback(callback: types.CallbackQuery, state: FSMContext):
    # TODO: –∑–¥–µ—Å—å –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–±–æ—Ä –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ –∫—ç—à–∞

    # TODO: –∑–¥–µ—Å—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–ª –º–µ–Ω—å—à–µ 10 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥ —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é,
    #  —Ç–æ –º–æ–∂–Ω–æ –µ–µ –∑–∞–∫–µ—à–∏—Ä–æ–≤–∞—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å.

    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text='–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±', request_contact=True)]],
        resize_keyboard=True,
        one_time_keyboard=True,
    )

    await callback.message.delete()

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    await callback.message.answer(messages.ASK_4_PHONE, reply_markup=keyboard)
    await state.set_state(AuthState.waiting_for_phone)


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@router.message(AuthState.waiting_for_phone, F.contact)
async def process_phone(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    phone_number = message.contact.phone_number

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    await state.update_data(phone=phone_number)

    loading_sticker = await message.answer_sticker(
        'CAACAgIAAxkBAAExqU9nq5ox8OKuKAR3gVTbqlxsOocsYAACeBsAArZjKElJPqq2J-v4QTYE'
    )
    loading_message = await message.answer(
        '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É...',
        reply_markup=types.ReplyKeyboardRemove(),  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )

    response = await user_login(
        telegram_user_id=str(message.from_user.id),
        telegram_username=message.from_user.username,
        phone=phone_number,
    )

    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text='üîë –°—Å—ã–ª–∫–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
            url=response['authorization_link'],  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        )
    )

    await loading_message.delete()
    await loading_sticker.delete()

    await message.answer(messages.AUTH_LINK, reply_markup=builder.as_markup())


def register_handlers(dp: Dispatcher):
    dp.include_router(router)

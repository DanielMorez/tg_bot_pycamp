from typing import List, Optional

from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src.constants import (
    BUTTON_FAQ_BACK,
    BUTTON_FAQ_HOME,
    CALLBACK_FAQ_BACK,
    CALLBACK_FAQ_HOME,
    CALLBACK_FAQ_QUESTION,
    CALLBACK_FAQ_THEME,
)
from src.types import FAQ_DATA, FAQTheme


class FAQService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å FAQ"""

    @staticmethod
    def get_themes() -> List[FAQTheme]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–µ–º FAQ"""
        return FAQ_DATA

    @staticmethod
    def get_theme_by_index(theme_index: int) -> Optional[FAQTheme]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–º—É –ø–æ –∏–Ω–¥–µ–∫—Å—É"""
        if 0 <= theme_index < len(FAQ_DATA):
            return FAQ_DATA[theme_index]
        return None

    @staticmethod
    def get_question_by_indices(
        theme_index: int, question_index: int
    ) -> Optional[dict]:
        """–ü–æ–ª—É—á–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º —Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å–∞"""
        theme = FAQService.get_theme_by_index(theme_index)
        if theme and 0 <= question_index < len(theme["questions"]):
            return theme["questions"][question_index]
        return None

    @staticmethod
    def create_themes_keyboard() -> InlineKeyboardBuilder:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç–µ–º"""
        builder = InlineKeyboardBuilder()

        for i, theme in enumerate(FAQ_DATA):
            builder.add(
                InlineKeyboardButton(
                    text=theme["theme"], callback_data=f"{CALLBACK_FAQ_THEME}:{i}"
                )
            )

        builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
        return builder

    @staticmethod
    def create_questions_keyboard(theme_index: int) -> InlineKeyboardBuilder:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤ —Ç–µ–º—ã"""
        builder = InlineKeyboardBuilder()

        theme = FAQService.get_theme_by_index(theme_index)
        if not theme:
            return builder

        for i, question in enumerate(theme["questions"]):
            builder.add(
                InlineKeyboardButton(
                    text=question["question"],
                    callback_data=f"{CALLBACK_FAQ_QUESTION}:{theme_index}:{i}",
                )
            )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        builder.add(
            InlineKeyboardButton(text=BUTTON_FAQ_BACK, callback_data=CALLBACK_FAQ_BACK)
        )
        builder.add(
            InlineKeyboardButton(text=BUTTON_FAQ_HOME, callback_data=CALLBACK_FAQ_HOME)
        )

        builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
        return builder

    @staticmethod
    def create_navigation_keyboard(theme_index: int) -> InlineKeyboardBuilder:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å"""
        builder = InlineKeyboardBuilder()

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º"
        builder.add(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ö –≤–æ–ø—Ä–æ—Å–∞–º", callback_data=f"{CALLBACK_FAQ_THEME}:{theme_index}"
            )
        )

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ —Ç–µ–º–∞–º"
        builder.add(
            InlineKeyboardButton(text=BUTTON_FAQ_BACK, callback_data=CALLBACK_FAQ_BACK)
        )

        # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        builder.add(
            InlineKeyboardButton(text=BUTTON_FAQ_HOME, callback_data=CALLBACK_FAQ_HOME)
        )

        builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
        return builder

    @staticmethod
    def format_question_answer(question_data: dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        return f"‚ùì <b>{question_data['question']}</b>\n\nüí¨ {question_data['answer']}"

    @staticmethod
    def format_theme_title(theme: FAQTheme) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ–º—ã"""
        return f"üìö <b>{theme['theme']}</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:"
